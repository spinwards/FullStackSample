{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/cmoor/source/repos/FullStackSample/FullStackSample/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.serviceUrl;\n  }\n\n  getNotes() {\n    return firstValueFrom(this.http.get(`${this.baseUrl}notes`));\n  }\n\n  getNote(id) {\n    return firstValueFrom(this.http.get(`${this.baseUrl}notes/${id}`));\n  }\n\n  createNote(note) {\n    return firstValueFrom(this.http.post(`${this.baseUrl}notes`, note));\n  }\n\n  updateNote(note) {\n    return firstValueFrom(this.http.post(`${this.baseUrl}notes/${note.id}`, note));\n  }\n\n  deleteNote(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield firstValueFrom(_this.http.delete(`${_this.baseUrl}notes/${id}`));\n    })();\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,cAAT,QAA+B,MAA/B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAOA,OAAM,MAAOC,UAAP,CAAiB;EAIrBC,YAAYC,IAAZ,EAA4B;IAC1B,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKC,OAAL,GAAeJ,WAAW,CAACK,UAA3B;EACD;;EAEMC,QAAQ;IACb,OAAOP,cAAc,CAAC,KAAKI,IAAL,CAAUI,GAAV,CAAsB,GAAG,KAAKH,OAAO,OAArC,CAAD,CAArB;EACD;;EAEMI,OAAO,CAACC,EAAD,EAAW;IACvB,OAAOV,cAAc,CAAC,KAAKI,IAAL,CAAUI,GAAV,CAAoB,GAAG,KAAKH,OAAO,SAASK,EAAE,EAA9C,CAAD,CAArB;EACD;;EAEMC,UAAU,CAACC,IAAD,EAAW;IAC1B,OAAOZ,cAAc,CAAC,KAAKI,IAAL,CAAUS,IAAV,CAAqB,GAAG,KAAKR,OAAO,OAApC,EAA6CO,IAA7C,CAAD,CAArB;EACD;;EAEME,UAAU,CAACF,IAAD,EAAW;IAC1B,OAAOZ,cAAc,CACnB,KAAKI,IAAL,CAAUS,IAAV,CAAqB,GAAG,KAAKR,OAAO,SAASO,IAAI,CAACF,EAAE,EAApD,EAAwDE,IAAxD,CADmB,CAArB;EAGD;;EAEYG,UAAU,CAACL,EAAD,EAAW;IAAA;;IAAA;MAChC,MAAMV,cAAc,CAAC,KAAI,CAACI,IAAL,CAAUY,MAAV,CAAiB,GAAG,KAAI,CAACX,OAAO,SAASK,EAAE,EAA3C,CAAD,CAApB;IADgC;EAEjC;;AA7BoB;;;mBAAVR,YAAUe;AAAA;;;SAAVf;EAAUgB,SAAVhB,UAAU;EAAAiB,YAFT","names":["firstValueFrom","environment","ApiService","constructor","http","baseUrl","serviceUrl","getNotes","get","getNote","id","createNote","note","post","updateNote","deleteNote","delete","i0","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\cmoor\\source\\repos\\FullStackSample\\FullStackSample\\ClientApp\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Note } from './models/note';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private http: HttpClient;\n  private baseUrl: string;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n    this.baseUrl = environment.serviceUrl;\n  }\n\n  public getNotes(): Promise<Note[]> {\n    return firstValueFrom(this.http.get<Note[]>(`${this.baseUrl}notes`));\n  }\n\n  public getNote(id: number): Promise<Note> {\n    return firstValueFrom(this.http.get<Note>(`${this.baseUrl}notes/${id}`));\n  }\n\n  public createNote(note: Note): Promise<Note> {\n    return firstValueFrom(this.http.post<Note>(`${this.baseUrl}notes`, note));\n  }\n\n  public updateNote(note: Note): Promise<Note> {\n    return firstValueFrom(\n      this.http.post<Note>(`${this.baseUrl}notes/${note.id}`, note)\n    );\n  }\n\n  public async deleteNote(id: number): Promise<void> {\n    await firstValueFrom(this.http.delete(`${this.baseUrl}notes/${id}`));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}